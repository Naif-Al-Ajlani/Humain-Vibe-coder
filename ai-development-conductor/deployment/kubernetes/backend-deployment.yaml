apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-conductor-backend
  namespace: ai-conductor
  labels:
    app: ai-conductor-backend
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-conductor-backend
  template:
    metadata:
      labels:
        app: ai-conductor-backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: ai-conductor/backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: REDIS_HOST
          value: "redis-service"
        envFrom:
        - secretRef:
            name: ai-conductor-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: backend-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ai-conductor-backend-service
  namespace: ai-conductor
spec:
  selector:
    app: ai-conductor-backend
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP
